{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Initial Commands": {
		"prefix": "start",
		"body": [
		"#include <bits/stdc++.h>",
		"#ifndef ONLINE_JUDGE",
        "#include \"E:\\Codes\\debug.h\"",
        "#else ",
        "#define debug(x...)",
        "#endif",
        "",
		"using namespace std;",
		"#define ll long long",
		"#define ld long double",
		"#define pll pair<ll,ll>",
		"#define nl \"\\n\"",
		"#define printa(a,L,R) for(int i=L;i<R;i++) cout<<a[i]<<(i==R-1?'\\n':' ')",
		"#define pb push_back",
		"#define UB upper_bound",
		"#define LB lower_bound",
		"#define F first",
		"#define S second",
		"#define mem(a,x) memset(a,x,sizeof(a))",
		"ll cs;",
		"#define _case cout<<\"Case \"<<++cs<<\": \"",
		"#define rev(v) reverse(v.begin(),v.end())",
		"#define vf(v) (v).begin(),(v).end()",
		"#define vr(v) (v).rbegin(),(v).rend()",
		"#define mnv(v) *min_element(v.begin(),v.end())",
		"#define mxv(v) *max_element(v.begin(),v.end())",
		"const ll infi = 1e18;",
		"const ll mod = 1e9+7;",
		"const ll N = 1e6+3;",
		"float pi = 3.141592653589793238462643383279502884197;",
		"//ll dx[]={1,0,-1,0,1,-1,-1,1};",
		"//ll dy[]={0,1,0,-1,1,1,-1,-1};",
		"void solve()",
		"{",
		"\t",
		"}",
		"int main()",
		"{",
		"\tios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);",
    	"\tll t = 1;",
    	"\t// cin >> t;",
		"\t// cin.ignore();",
    	"\twhile (t--)",
		"\t\t{",
		"\t\t\tsolve();",
		"\t\t}",
    	"\treturn 0;",
		"}",
		],
		"description": "Initial Code"
	},
	"Template": {
		"prefix": "fake",
		"body": [
		"#include <bits/stdc++.h>",
		"#ifndef ONLINE_JUDGE",
        "#include \"E:\\Codes\\debug.h\"",
        "#else ",
        "#define debug(x...)",
        "#endif",
        "",
		"using namespace std;",
		"#define ll long long",
		"int main()",
		"{",
		"\tios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0);",
    	"\tll t = 1;",
    	"\t// cin >> t;",
		"\t// cin.ignore();",
    	"\twhile (t--)",
		"\t\t{",
		"\t\t\t",
		"\t\t}",
    	"\treturn 0;",
		"}",
		],
		"description": "Initial Code"
	},
	"Dfs code":{
		"prefix": "dfscode",
		"body":[
		"map<ll,vector<ll>>adj;",
		"map<ll,ll>vis;",
		"void dfs(ll s)",
		"{",
		"\tvis[s]=1;",
		"\tfor (auto it : adj[s])",
		"\t{",
		"\t\tif (!vis[it])",
		"\t\t{",
		"\t\t\tdfs(it);",
		"\t\t}",
		"\t}",
		"\tvis[s]=2;",
		"}",
		],
		"description": "dfs code"
	},
	"Bfs code":{
		"prefix": "bfscode",
		"body": [
		"map<ll,vector<ll>>adj;",
		"map<ll,ll>vis,par,level",
		"void bfs(ll s)",
		"{",
		"\tqueue<ll>q;",
		"\tq.push(s);",
		"\tvis[s]=1;",
		"\twhile(!q.empty())",
		"\t{",
		"\t\tll k=q.front();",
		"\t\tq.pop();",
		"\t\tfor(auto it:adj[k])",
		"\t\t{",
		"\t\t\tif(!vis[it])",
		"\t\t\t{",
		"\t\t\t\tq.push(it);",
		"\t\t\t\tpar[it]=k;",
		"\t\t\t\tlevel[it]=level[k]+1;",
		"\t\t\t\tvis[it]=1;",
		"\t\t\t}",
		"\t\t}",
		"\t}",
		"}",
		],
		"description": "bfs code"
	},
	"power":{
		"prefix": "power",
		"body":[
		"ll power(ll a, ll b) {",
		"\tll res = 1;"
		"\twhile (b > 0) {"
		"\t\tif (b & 1)",
		"\t\t\tres = res * a;"
		"\t\ta = a * a;"
		"\t\tb >>= 1;"
		"\t}"
		"\treturn res;"
		"}"
		],
		"description": "power Func"
	},
	"file":{
		"prefix": "file",
		"body":[
		"freopen(\"input.txt\", \"r\", stdin);",
		"freopen(\"output.txt\", \"w\", stdout);"
		],
		"description": "file"
	},
	"cppmain":{
		"prefix": "cppmain",
		"body":[
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define ll long long",
			"#define ld long double",
			"#define pll pair<ll, ll>",
			"#define nl \"\\n\"",
			"#define printa(a, L, R)for (int i = L; i < R; i++) cout << a[i] << (i == R - 1 ? '\\n' : ' ')",
			"#define pb push_back",
			"#define UB upper_bound",
			"#define LB lower_bound",
			"#define F first",
			"#define S second",
			"#define mem(a, x) memset(a, x, sizeof(a))",
			"void __print(ll x)",
			"{",
			"    cerr << x;",
			"}",
			"void __print(long x) { cerr << x; }",
			"void __print(unsigned x) { cerr << x; }",
			"void __print(unsigned long x) { cerr << x; }",
			"void __print(unsigned long long x) { cerr << x; }",
			"void __print(float x) { cerr << x; }",
			"void __print(double x) { cerr << x; }",
			"void __print(char x) { cerr << '\\'' << x << '\\''; }",
			"void __print(const char *x) { cerr << '\"' << x << '\"'; }",
			"void __print(const string &x) { cerr << '\"' << x << '\"'; }",
			"void __print(bool x) { cerr << (x ? \"true\" : \"false\"); }",
			"template <typename T, typename V>",
			"void __print(const pair<T, V> &x)",
			"{",
			"    cerr << '{';",
			"    __print(x.first);",
			"    cerr << ',';",
			"    __print(x.second);",
			"    cerr << '}';",
			"}",
			"template <typename T>",
			"void __print(const T &x)",
			"{",
			"    ll f = 0;",
			"    cerr << '{';",
			"    for (auto &i : x)",
			"        cerr << (f++ ? "," : ""),__print(i);",
			"    cerr << \"}\";",
			"}",
			"void _print() { cerr << \"\"; }",
			"template <typename T, typename... V>",
			"void _print(T t, V... v)",
			"{",
			"    __print(t);",
			"    if (sizeof...(v))",
			"        cerr << \", \";",
			"    _print(v...);",
			"}",
			"void _print(ll t) { cerr << t; }",
			"void _print(char t) { cerr << t; }",
			"void _print(float t) { cerr << t; }",
			"void _print(string t) { cerr << t; }",
			"",
			"template <class T, class V>",
			"void _print(pair<T, V> p);",
			"template <class T>",
			"void _print(vector<T> v);",
			"template <class T>",
			"void _print(set<T> v);",
			"template <class T, class V>",
			"void _print(map<T, V> v);",
			"template <class T>",
			"void _print(multiset<T> v);",
			"template <class T, class V>",
			"void _print(pair<T, V> p)",
			"{"
				"cerr << \"{\";",
				"_print(p.first);,"
				"cerr << \",\";",
				"_print(p.second);",
				"cerr << \"}\";"
			"}",
			"template <class T>",
			"void _print(vector<T> v)",
			"{",
			"    cerr << \"[ \";",
			"    for (T i : v)",
			"    {",
			"        _print(i);",
			"        cerr << " ";",
			"    }",
			"    cerr << \" ]\";",
			"}",
			"template <class T>",
			"void _print(set<T> v)",
			"{",
			"    cerr << \"[ \";",
			"    for (T i : v)",
			"    {",
			"        _print(i);",
			"        cerr << " ";",
			"    }",
			"    cerr << \" ]\";",
			"}",
			"template <class T>",
			"void _print(multiset<T> v)",
			"{",
			"    cerr << \"[ \";",
			"    for (T i : v)",
			"    {",
			"        _print(i);",
			"        cerr << " ";",
			"    }",
			"    cerr << \" ]\";",
			"}",
			"template <class T, class V>",
			"void _print(map<T, V> v)",
			"{",
			"    cerr << \"[ \";",
			"    for (auto i : v)",
			"    {",
			"        _print(i);",
			"        cerr << " ";",
			"    }",
			"    cerr << \" ]\";",
			"}",
			"",
			"#define debug(x...)cerr << \"[ \" << #x << \" ] = [\";  _print(x);cerr << \" ]\" << endl;",
			"ll cs;",
			"#define _case cout << \"Case \" << ++cs << \": \"",
			"#define rev(v) reverse(v.begin(), v.end())",
			"#define vf(v) (v).begin(), (v).end()",
			"#define vr(v) (v).rbegin(), (v).rend()",
			"#define mnv(v) *min_element(v.begin(), v.end())",
			"#define mxv(v) *max_element(v.begin(), v.end())",
			"const ll infi = 1e18;",
			"const ll mod = 1e9 + 7;",
			"const ll N = 1e6 + 3;",
			"float pi = acos(-1);",
			"// ll dx[]={1,0,-1,0,1,-1,-1,1};",
			"// ll dy[]={0,1,0,-1,1,1,-1,-1};",
			"void solve()",
			"{",
			"}",
			"int main()",
			"{",
			"    ios_base::sync_with_stdio(0), cin.tie(0), cout.tie(0);",
			"    ll t = 1;",
			"    // cin >> t;",
			"    // cin.ignore();",
			"    while (t--)",
			"    {",
			"        solve();",
			"    }",
			"    return 0;",
			"}",
		],
		"description": "fastio"
	}
}
